package com.example.nt910s5k_k71g.yoygame;

        import android.app.Activity;
        import android.app.AlertDialog;
        import android.content.Intent;
        import android.database.Cursor;
        import android.graphics.Bitmap;
        import android.graphics.BitmapFactory;
        import android.net.Uri;
        import android.os.Environment;
        import android.provider.MediaStore;
        import android.support.v7.app.AppCompatActivity;
        import android.os.Bundle;
        import android.util.Log;
        import android.view.View;
        import android.widget.Button;
        import android.widget.ImageView;
        import android.widget.Toast;

        import java.io.File;
        import java.io.FileInputStream;
        import java.io.FileOutputStream;
        import java.io.IOException;
        import java.io.InputStream;
        import java.io.OutputStream;

public class OprandActivity extends Activity {

    private static final String TAG = "TestImageCropActivity";
    private static final int PICK_FROM_CAMERA = 0;
    private static final int PICK_FROM_ALBUM = 1;
    private static final int CROP_FROM_CAMERA =2;
    private Uri mImageCaptureUri;
    private AlertDialog mDialog;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_oprand);
        setLayout();
    }
    public void onButtonClick(View v){
        switch (v.getId()) {
            case R.id.btn_image_crop:
                mDialog = createDialog();
                mDialog.show();
                break;
        }
    }

    private AlertDialog createDialog() {
        final View innerView = getLayoutInflater().inflate(R.layout.image_crop_row, null);
        Button camera = (Button)innerView.findViewById(R.id.btu_camera_crop);
        Button gellary = (Button)innerView.findViewById(R.id.btn_gellary_crop);
        camera.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                doTakeAlbumAction();;
                setDismiss(mDialog);
            }
        });

        gellary.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                doTakeAlbumAction();
                setDismiss(mDialog);
            }
        });

        AlertDialog.Builder ab = new AlertDialog.Builder(this);
        ab.setTitle("이미지 Crop");
        ab.setView(innerView);

        return  ab.create();
    }

    private void doTakePhotoAction()
    {
        Log.i(TAG, "doTakePhotoAction()");
        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);

        mImageCaptureUri = createSaveCropFile();
        intent.putExtra(android.provider.MediaStore.EXTRA_OUTPUT, mImageCaptureUri);
        startActivityForResult(intent, PICK_FROM_CAMERA);
    }

    private void doTakeAlbumAction()
    {
        Log.i(TAG, "doTakeAlbumAction()");

        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setType(android.provider.MediaStore.Images.Media.CONTENT_TYPE);
        startActivityForResult(intent, PICK_FROM_ALBUM);

    }
    /**
     * 다이얼로그 종료
     */
    private void setDismiss(AlertDialog dialog){
        if(dialog!=null&&dialog.isShowing()){
            dialog.dismiss();
        }

    }



    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        Log.d(TAG, "onActivityResult");
        if(resultCode != RESULT_OK)
        {
            return;
        }

        switch(requestCode)
        {
            case PICK_FROM_ALBUM:
            {
                Log.d(TAG, "PICK_FROM_ALBUM");

                mImageCaptureUri = data.getData();
                File original_file = getImageFile(mImageCaptureUri);
                //            mImageCaptureUri = createSaveCropFile();
                //          File cpoy_file = new File(mImageCaptureUri.getPath());
            }
            case PICK_FROM_CAMERA:
            {
                Log.d(TAG, "PICK_FROM_CAMERA");


                Intent intent = new Intent("com.android.camera.action.CROP");
                intent.setDataAndType(mImageCaptureUri, "image/*");


                intent.putExtra("output", mImageCaptureUri);

//          intent.putExtra("return-data", true);
                intent.putExtra("outputX", 500);
                intent.putExtra("outputY", 500);
                intent.putExtra("aspectX", 1);
                intent.putExtra("aspectY", 1);
                intent.putExtra("scale", true);
                intent.putExtra("return-data", true);


                String name_Str = getImageNameToUri(data.getData());
                //tsxt :   Toast.makeText(getBaseContext(), "정답은 무엇일까요??"+name_Str , Toast.LENGTH_SHORT).show();
                //test :   startActivityForResult(intent, CROP_FROM_CAMERA); 
                break;
            }
            case CROP_FROM_CAMERA:
            {
                Log.w(TAG, "CROP_FROM_CAMERA");

                Log.w(TAG, "mImageCaptureUri = " + mImageCaptureUri);
                String full_path = mImageCaptureUri.getPath();
                String photo_path = full_path.substring(4, full_path.length());
                Log.w(TAG, "비트맵 Image path = "+photo_path);
                Bitmap photo = BitmapFactory.decodeFile(photo_path);
                mPhotoImageView.setImageBitmap(photo);
                break;
            }
        }
    }
    private Uri createSaveCropFile(){
        Uri uri;
        String url = "tmp_" + String.valueOf(System.currentTimeMillis())+"png";
        uri = Uri.fromFile(new File(Environment.getExternalStorageDirectory(), url));
        return uri;
    }

    private File getImageFile(Uri uri) {
        String[] projection = { MediaStore.Images.Media.DATA };
        if (uri == null) {
            uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
        }

        Cursor mCursor = getContentResolver().query(uri, projection, null, null,
                MediaStore.Images.Media.DATE_MODIFIED + " desc");
        if(mCursor == null || mCursor.getCount() < 1) {
            return null; // no cursor or no record
        }
        int column_index = mCursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
        mCursor.moveToFirst();

        String path = mCursor.getString(column_index);

        if (mCursor !=null ) {
            mCursor.close();
            mCursor = null;
        }

        return new File(path);
    }

    public static boolean copyFile(File srcFile, File destFile) {
        boolean result = false;
        try {
            InputStream in = new FileInputStream(srcFile);
            try {
                result = copyToFile(in, destFile);
            } finally  {
                in.close();
            }
        } catch (IOException e) {
            result = false;
        }
        return result;
    }


    private static boolean copyToFile(InputStream inputStream, File destFile) {
        try {
            OutputStream out = new FileOutputStream(destFile);
            try {
                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) >= 0) {
                    out.write(buffer, 0, bytesRead);
                }
            } finally {
                out.close();
            }
            return true;
        } catch (IOException e) {
            return false;
        }
    }
    public String getImageNameToUri(Uri data)
    {
        String[] proj = { MediaStore.Images.Media.DATA };
        Cursor cursor = managedQuery(data, proj, null, null, null);
        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
        cursor.moveToFirst();
        String imgPath = cursor.getString(column_index);
        String imgName = imgPath.substring(imgPath.lastIndexOf("/")+1);
        return imgName;
    }

    private ImageView mPhotoImageView;

    private void setLayout(){
        mPhotoImageView = (ImageView)findViewById(R.id.img_bitmap);
    }
}


======================================

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical">

    <LinearLayout
        android:layout_width="fill_parent"
        android:layout_height="63dp"
        android:orientation="horizontal">

        <Button
            android:id="@+id/btn_image_crop"
            android:layout_width="100dip"
            android:layout_height="64dp"
            android:onClick="onButtonClick"
            android:text="이미지Crop" />

        <Button
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:layout_weight="0.00"
            android:text="카메라" />

    </LinearLayout>

    <ImageView
        android:id="@+id/img_bitmap"
        android:layout_width="match_parent"
        android:layout_height="510dp"
        android:layout_centerInParent="true" />


</LinearLayout>

==========================================
서브

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >

    <Button
        android:id="@+id/btn_gellary_crop"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:text="갤러리" />

    <Button
        android:id="@+id/btu_camera_crop"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="카메라" />

</LinearLayout>
